{
    "primitives": {
        "all": {
            "identity": "all",
            "display_name": "all?",
            "short_description": "Checks if a reporter is true for all agents in an agentset.",
            "search_terms": [
                "all",
                "check",
                "agents",
                "agentset",
                "exist"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "any?",
                "nobody",
                "count",
                "not",
                "if"
            ],
            "library_models": [
                "Autumn",
                "Shepherds",
                "Scatter",
                "Party"
            ]
        },
        "and": {
            "identity": "and",
            "display_name": "and",
            "short_description": "Checks if both provided conditions are true.",
            "search_terms": [
                "both",
                "boolean",
                "true",
                "false",
                "combine"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "if",
                "or",
                "if-else",
                "ifelse-value",
                "not"
            ],
            "library_models": [
                "Autumn",
                "Fur",
                "Flocking",
                "Small Worlds"
            ]
        },
        "any": {
            "identity": "any",
            "display_name": "any?",
            "short_description": "Checks if there are any agents in an agentset.",
            "search_terms": [
                "any",
                "within",
                "count",
                "agentset",
                "remaining"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "all?",
                "count",
                "if",
                "other",
                "nobody"
            ],
            "library_models": [
                "Anisogamy",
                "Fur",
                "Mammoths",
                "Fireworks"
            ]
        },
        "ask": {
            "identity": "ask",
            "display_name": "ask",
            "short_description": "Asks agents do things.",
            "search_terms": [
                "do",
                "commands",
                "rules",
                "behavior"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "turtles",
                "patches",
                "links",
                "with",
                "n-of",
                "one-of"
            ],
            "library_models": [
                "Ants",
                "Mimicry",
                "Moths",
                "Tumor"
            ]
        },
        "breed": {
            "identity": "breed",
            "display_name": "breed",
            "short_description": "Defines a custom breed of turtles.",
            "search_terms": [
                "kind",
                "type",
                "subset",
                "custom"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "create-turtles",
                "turtles-own",
                "die",
                "ask",
                "hatch"
            ],
            "library_models": [
                "Bacterial Infection",
                "Disease Solo",
                "Rabbit Grass Weeds",
                "Wolf Sheep Predation"
            ]
        },
        "ceiling": {
            "identity": "ceiling",
            "display_name": "ceiling",
            "short_description": "Rounds a number up to the nearest integer.",
            "search_terms": [
                "round",
                "up",
                "integer",
                "decimal",
                "floating",
                "math",
                "calculate"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "floor",
                "round",
                "mean",
                "count"
            ],
            "library_models": [
                "GasLab Circular Particles",
                "Traffic 2 Lanes",
                "Chaos in a Box",
                "Decay"
            ]
        },
        "ca": {
            "identity": "ca",
            "display_name": "ca",
            "short_description": "Clears all the drawings, turtles, plots, etc., leaving a blank slate.",
            "search_terms": [
                "clear",
                "erase",
                "remove",
                "delete",
                "clean",
                "new",
                "fresh",
                "refresh",
                "reset",
                "restart",
                "reboot",
                "recreate"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "clear-patches",
                "clear-turtles",
                "die",
                "reset-ticks",
                "globals",
                "create-turtles"
            ],
            "library_models": [
                "Flocking",
                "Fur",
                "Daisyworld",
                "Wolf Sheep Predation",
                "Follower"
            ]
        },
        "clear-all": {
            "identity": "clear-all",
            "display_name": "clear-all",
            "short_description": "Clears all the drawings, turtles, plots, etc., leaving a blank slate.",
            "search_terms": [
                "clear",
                "erase",
                "remove",
                "delete",
                "clean",
                "new",
                "fresh",
                "refresh",
                "reset",
                "restart",
                "reboot",
                "recreate"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "clear-patches",
                "clear-turtles",
                "die",
                "reset-ticks",
                "globals",
                "create-turtles"
            ],
            "library_models": [
                "Flocking",
                "Fur",
                "Daisyworld",
                "Wolf Sheep Predation",
                "Follower"
            ]
        },
        "clear-patches": {
            "identity": "clear-patches",
            "display_name": "clear-patches",
            "short_description": "Clears the patches by resetting all patch variables to their default initial values and making them black.",
            "search_terms": [
                "clear",
                "erase",
                "remove",
                "delete",
                "clean",
                "new",
                "fresh",
                "refresh",
                "reset",
                "restart",
                "reboot",
                "recreate"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "clear-all",
                "clear-turtles",
                "neighbors",
                "pcolor",
                "reset-ticks",
                "globals",
                "create-turtles"
            ],
            "library_models": [
                "Disease Solo",
                "Turbulence",
                "Simple Kinetics 3",
                "Simple Birth Rates"
            ]
        },
        "clear-turtles": {
            "identity": "clear-turtles",
            "display_name": "clear-turtles",
            "short_description": "Removes all the turtles as well as resets the numbering of turtles.",
            "search_terms": [
                "clear",
                "erase",
                "remove",
                "delete",
                "clean",
                "new",
                "fresh",
                "refresh",
                "reset",
                "restart",
                "reboot",
                "recreate"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "die",
                "clear-all",
                "clear-patches",
                "reset-ticks",
                "globals",
                "create-turtles"
            ],
            "library_models": [
                "Grand Canyon",
                "Disease Solo",
                "CA 1D Elementary",
                "Simple Birth Rates"
            ]
        },
        "color": {
            "identity": "color",
            "display_name": "color",
            "short_description": "Built-in turtle characteristic that the color of a turtle and allows us to change it.",
            "search_terms": [
                "color",
                "pencil",
                "change",
                "turtle",
                "link",
                "look",
                "style",
                "design",
                "visual",
                "hue",
                "rgb",
                "hex"
            ],
            "agents": [
                "turtles",
                "links"
            ],
            "see_also": [
                "pcolor",
                "scale-color",
                "turtles-own",
                "of",
                "with"
            ],
            "library_models": [
                "Sunflower",
                "Mammoths",
                "Bacterial Infection",
                "Tumor"
            ]
        },
        "count": {
            "identity": "count",
            "display_name": "count",
            "short_description": "Counts the number of agents in an agentset.",
            "search_terms": [
                "number",
                "agents",
                "many",
                "turtles",
                "links",
                "patches",
                "amount",
                "total",
                "sum"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "mean",
                "mod",
                "if",
                "if-else",
                "any?",
                "all",
                "turtles",
                "patches"
            ],
            "library_models": [
                "Mimicry",
                "Peppered Moths",
                "Virus",
                "Plant Growth"
            ]
        },
        "create-links-with": {
            "identity": "create-links-with",
            "display_name": "create-links-with",
            "short_description": "Creates links with every agent in an agentset.",
            "search_terms": [
                "social",
                "connect",
                "network",
                "web",
                "complex",
                "relation"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "link-neighbors",
                "layout-circle",
                "links",
                "n-of"
            ],
            "library_models": [
                "Team Assembly",
                "CRISPR Bacterium",
                "Membrane Formation",
                "Virus on a Network"
            ]
        },
        "crt": {
            "identity": "crt",
            "display_name": "crt",
            "short_description": "Creates turtles with random colors and headings at the center of the world.",
            "search_terms": [
                "create",
                "make",
                "more",
                "turtle",
                "new",
                "agent"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "hatch",
                "sprout",
                "ask",
                "turtles-own",
                "breeds"
            ],
            "library_models": [
                "Sunflower",
                "Wolf Sheep Predation",
                "Virus",
                "Plant Growth"
            ]
        },
        "create-turtles": {
            "identity": "create-turtles",
            "display_name": "create-turtles",
            "short_description": "Creates turtles with random colors and headings at the center of the world.",
            "search_terms": [
                "make",
                "more",
                "turtle",
                "new",
                "agent"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "hatch",
                "sprout",
                "ask",
                "turtles-own",
                "breeds"
            ],
            "library_models": [
                "Sunflower",
                "Wolf Sheep Predation",
                "Virus",
                "Plant Growth"
            ]
        },
        "die": {
            "identity": "die",
            "display_name": "die",
            "short_description": "Removes a turtle or link from the world.",
            "search_terms": [
                "remove",
                "end",
                "kill",
                "erase",
                "death",
                "disappear",
                "eliminate",
                "discard"
            ],
            "agents": [
                "turtles",
                "links"
            ],
            "see_also": [
                "turtles",
                "links",
                "patches",
                "create-turtles"
            ],
            "library_models": [
                "Wolf Sheep Predation",
                "Virus",
                "Tumor",
                "Bug Hunt Camouflage"
            ]
        },
        "diffuse": {
            "identity": "diffuse",
            "display_name": "diffuse",
            "short_description": "Spreads a patch characteristic to its neighbors.",
            "search_terms": [
                "spread",
                "share",
                "disperse",
                "radiate",
                "propagate",
                "broadcast"
            ],
            "agents": [
                "patches"
            ],
            "see_also": [
                "patches-own",
                "patches",
                "globals",
                "neighbors",
                "neighbors4"
            ],
            "library_models": [
                "Ants",
                "Slime",
                "Heatbugs",
                "Honeycomb"
            ]
        },
        "distance": {
            "identity": "distance",
            "display_name": "distance",
            "short_description": "Reports the distance from one turtle/patch agent to another.",
            "search_terms": [
                "length",
                "far",
                "measure",
                "range",
                "gap",
                "separation",
                "space"
            ],
            "agents": [
                "turtles",
                "patches"
            ],
            "see_also": [
                "facexy",
                "min-pxcor",
                "patch-ahead",
                "setxy"
            ],
            "library_models": [
                "Flocking Vee Formations",
                "Fur",
                "BeeSmart Hive Finding",
                "Autumn"
            ]
        },
        "end": {
            "identity": "end",
            "display_name": "end",
            "short_description": "Concludes a procedure.",
            "search_terms": [
                "finish",
                "complete",
                "close",
                "finalize",
                "wrap",
                "terminate",
                "define"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "to",
                "to-report",
                "ask",
                "semicolon"
            ],
            "library_models": [
                "Rock Paper Scissors",
                "El Farol",
                "Paths",
                "Traffic Grid"
            ]
        },
        "face": {
            "identity": "face",
            "display_name": "face",
            "short_description": "Changes a turtle's heading towards another turtle or patch.",
            "search_terms": [
                "turn",
                "spin",
                "look",
                "confront",
                "watch",
                "glare",
                "stare",
                "direction",
                "angle"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "towards",
                "facexy",
                "heading",
                "right"
            ],
            "library_models": [
                "Disease Solo",
                "Heatbugs",
                "Voronoi - Emergent",
                "Vants",
                "Wealth Distribution"
            ]
        },
        "facexy": {
            "identity": "facexy",
            "display_name": "facexy",
            "short_description": "Changes a turtle's heading towards a specific point (x, y) in the world.",
            "search_terms": [
                "turn",
                "spin",
                "look",
                "confront",
                "watch",
                "glare",
                "stare",
                "direction",
                "angle"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "face",
                "setxy",
                "heading",
                "towards"
            ],
            "library_models": [
                "Ant Lines",
                "Scatter",
                "Bidding Market",
                "Thermostat"
            ]
        },
        "floor": {
            "identity": "floor",
            "display_name": "floor",
            "short_description": "Rounds a number down to the nearest integer.",
            "search_terms": [
                "round",
                "up",
                "integer",
                "decimal",
                "floating",
                "math",
                "calculate"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "ceiling",
                "round",
                "mod",
                "count"
            ],
            "library_models": [
                "Daisyworld",
                "Simple Birth Rates",
                "Traffic Grid"
            ]
        },
        "forward": {
            "identity": "forward",
            "display_name": "forward",
            "short_description": "Allows turtles to move in any number of units on a straight path.",
            "search_terms": [
                "move",
                "motion",
                "straight",
                "go",
                "around",
                "position",
                "location",
                "step",
                "walk",
                "jog"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "right",
                "heading",
                "turtles",
                "move-to"
            ],
            "library_models": [
                "Bidding Market",
                "Vector Fields",
                "CRISPR Ecosystem",
                "Wolf Sheep Predation"
            ]
        },
        "fd": {
            "identity": "fd",
            "display_name": "fd",
            "short_description": "Allows turtles to move in any number of units on a straight path.",
            "search_terms": [
                "move",
                "motion",
                "straight",
                "go",
                "around",
                "position",
                "location",
                "step",
                "walk",
                "jog"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "right",
                "heading",
                "turtles",
                "move-to"
            ],
            "library_models": [
                "Bidding Market",
                "Vector Fields",
                "CRISPR Ecosystem",
                "Wolf Sheep Predation"
            ]
        },
        "globals": {
            "identity": "globals",
            "display_name": "globals",
            "short_description": "Defines variables that can be accessed throughout the whole model and has the same value for all the agents.",
            "search_terms": [
                "variable",
                "scope",
                "universal",
                "constant"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "turtles-own",
                "patches-own",
                "set",
                "let"
            ],
            "library_models": [
                "Shepherds",
                "HIV",
                "Giant Component",
                "Fruit Wars"
            ]
        },
        "hatch": {
            "identity": "hatch",
            "display_name": "hatch",
            "short_description": "Allows a turtle to make any number of new turtles that are identical to itself.",
            "search_terms": [
                "birth",
                "new",
                "create",
                "conceive",
                "spawn",
                "generate",
                "make",
                "parent"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "sprout",
                "create-turtles",
                "die",
                "ask"
            ],
            "library_models": [
                "Chaos in a Box",
                "Reactor Top Down",
                "Voronoi",
                "Galton Box"
            ]
        },
        "if": {
            "identity": "if",
            "display_name": "if",
            "short_description": "Carries out a provided set of rules (code) if a given condition is true. Does nothing if a given condition is false.",
            "search_terms": [
                "condition",
                "true",
                "false",
                "branch"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "ifelse",
                "ifelse-value",
                "any?",
                "all?"
            ],
            "library_models": [
                "Reactor X-Section",
                "Sand",
                "DLA Alternate Linear",
                ""
            ]
        },
        "ifelse": {
            "identity": "ifelse",
            "display_name": "ifelse",
            "short_description": "Carries out one set of rules if a given condition is true, and another set of rules if a given condition is false.",
            "search_terms": [
                "condition",
                "true",
                "false",
                "branch",
                "otherwise"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "if",
                "ifelse-value",
                "or",
                "and"
            ],
            "library_models": [
                "Crystallization Basic",
                "Rebellion",
                "Hotelling's Law",
                "Traffic Grid"
            ]
        },
        "ifelse-value": {
            "identity": "ifelse-value",
            "display_name": "ifelse-value",
            "short_description": "Picks a value based on a provided list of condition-value pairs.",
            "search_terms": [
                "switch",
                "case",
                "condition",
                "otherwise"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "if",
                "if-else",
                "or",
                "globals"
            ],
            "library_models": [
                "Echo",
                "Virus",
                "Sunflower Emergent",
                "DLA Alternate"
            ]
        },
        "in-cone": {
            "identity": "in-cone",
            "display_name": "in-cone",
            "short_description": "Reports members of an agentset within a \"cone-of-vision\" of an agent.",
            "search_terms": [
                "see",
                "vision",
                "detect",
                "near"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "in-radius",
                "other",
                "neighbors",
                "with"
            ],
            "library_models": [
                "Flocking Vee Formations",
                "BeeSmart Hive Finding",
                "Bug Hunt Speeds",
                "Flocking"
            ]
        },
        "in-radius": {
            "identity": "in-radius",
            "display_name": "in-radius",
            "short_description": "Reports members of an agentset within a certain radius of an agent.",
            "search_terms": [
                "around",
                "near",
                "circle",
                "detect",
                "see",
                "vision"
            ],
            "agents": [
                "turtles",
                "patches"
            ],
            "see_also": [
                "in-cone",
                "other",
                "neighbors",
                "with"
            ],
            "library_models": [
                "GasLab Circular Particles",
                "Paths",
                "Fruit Wars",
                "Fairy Circles"
            ]
        },
        "layout-circle": {
            "identity": "layout-circle",
            "display_name": "layout-circle",
            "short_description": "Places turtles in a circle circle around the center of the world.",
            "search_terms": [
                "formation",
                "arrangement",
                "ring",
                "link"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "links",
                "link-neighbors",
                "create-links-with",
                "setxy",
                "move-to"
            ],
            "library_models": [
                "Planarity",
                "Giant Component",
                "Small Worlds"
            ]
        },
        "left": {
            "identity": "left",
            "display_name": "left",
            "short_description": "Turns a turtle certain amount of degrees to the left.",
            "search_terms": [
                "turn",
                "angle",
                "direction",
                "orientation",
                "twist",
                "rotate"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "right",
                "set",
                "face",
                "forward"
            ],
            "library_models": [
                "Mammoths",
                "Tumor",
                "Flocking",
                "Slime"
            ]
        },
        "let": {
            "identity": "let",
            "display_name": "let",
            "short_description": "Creates a local variable that only exists within just one procedure or a statement surrended with brackets (`[  ]`).",
            "search_terms": [
                "variable",
                "local",
                "declare",
                "value",
                "constant",
                "temporary"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "turtles-own",
                "patches-own",
                "globals",
                "set"
            ],
            "library_models": [
                "Disease Solo",
                "Sand",
                "Lennard-Jones",
                "Boiling"
            ]
        },
        "link-neighbors": {
            "identity": "link-neighbors",
            "display_name": "link-neighbors",
            "short_description": "Reports all agents connected to a turtle with links.",
            "search_terms": [
                "connect",
                "network",
                "web",
                "complex",
                "relation",
                "social"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "create-links-with",
                "links",
                "any?",
                "count"
            ],
            "library_models": [
                "Membrane Formation",
                "Giant Component",
                "Small Worlds",
                "Language Change"
            ]
        },
        "links": {
            "identity": "links",
            "display_name": "links",
            "short_description": "Reports an agentset that contains all the links in a model.",
            "search_terms": [
                "connect",
                "network",
                "web",
                "complex",
                "relation",
                "social"
            ],
            "agents": [
                "links"
            ],
            "see_also": [
                "link-neighbors",
                "turtles",
                "patches",
                "create-links-with"
            ],
            "library_models": [
                "Virus on a Network",
                "Preferential Attachment",
                "Team Assembly",
                "Small Worlds"
            ]
        },
        "max": {
            "identity": "max",
            "display_name": "max",
            "short_description": "Reports the highest value in a provided list.",
            "search_terms": [
                "big",
                "high",
                "largest",
                "most",
                "top"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "count",
                "min",
                "mean",
                "mod"
            ],
            "library_models": [
                "Mimicry",
                "Ant Lines",
                "Grand Canyon",
                "Fruit Wars"
            ]
        },
        "max-n-of": {
            "identity": "max-n-of",
            "display_name": "max-n-of",
            "short_description": "Reports a list of top values in a provided list.",
            "search_terms": [
                "big",
                "high",
                "largest",
                "most",
                "top"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "one-of",
                "max",
                "min",
                "count"
            ],
            "library_models": [
                "Simple Economy",
                "Simple Viral Marketing"
            ]
        },
        "max-pxcor": {
            "identity": "max-pxcor",
            "display_name": "max-pxcor",
            "short_description": "Reports the largest x-coordinate of the patches in a model.",
            "search_terms": [
                "patch",
                "coordinate",
                "x",
                "axis",
                "world",
                "view",
                "west"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "min-pxcor",
                "min-pycor",
                "move-to",
                "setxy"
            ],
            "library_models": [
                "Urban Suite - Economic Disparity",
                "DLA",
                "Traffic Grid Goal"
            ]
        },
        "max-pycor": {
            "identity": "max-pycor",
            "display_name": "max-pycor",
            "short_description": "Reports the largest y-coordinate of the patches in a model.",
            "search_terms": [
                "patch",
                "coordinate",
                "y",
                "axis",
                "world",
                "view",
                "north"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "min-pxcor",
                "min-pycor",
                "move-to",
                "setxy"
            ],
            "library_models": [
                "Fruit Wars",
                "Ants",
                "Sunflower Biomorphs",
                "Random Balls"
            ]
        },
        "mean": {
            "identity": "mean",
            "display_name": "mean",
            "short_description": "Reports the average of a provided list of numerical values.",
            "search_terms": [
                "average",
                "list",
                "array",
                "median",
                "medium",
                "middle"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "count",
                "max",
                "round",
                "ceiling"
            ],
            "library_models": [
                "Mimicry",
                "Flocking",
                "Scatter",
                "CRISPR Ecosystem"
            ]
        },
        "member": {
            "identity": "member",
            "display_name": "member?",
            "short_description": "Reports true if a value is within a list or if an agent is in an agentset.",
            "search_terms": [
                "in",
                "list",
                "part",
                "element"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "count",
                "if",
                "n-of",
                "with"
            ],
            "library_models": [
                "Fairy Circles",
                "Small Worlds",
                "Party",
                "Traffic Grid Goal"
            ]
        },
        "min-pxcor": {
            "identity": "min-pxcor",
            "display_name": "min-pxcor",
            "short_description": "Reports the smallest x-coordinate of the patches in a model.",
            "search_terms": [
                "patch",
                "coordinate",
                "x",
                "axis",
                "world",
                "view",
                "east"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "max-pxcor",
                "max-pycor",
                "move-to",
                "setxy"
            ],
            "library_models": [
                "Fire",
                "Tumor",
                "Blood Sugar Regulation",
                "Ant Lines"
            ]
        },
        "min-pycor": {
            "identity": "min-pycor",
            "display_name": "min-pycor",
            "short_description": "Reports the smallest y-coordinate of the patches in a model.",
            "search_terms": [
                "patch",
                "coordinate",
                "x",
                "axis",
                "world",
                "view",
                "south"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "max-pxcor",
                "max-pycor",
                "move-to",
                "setxy"
            ],
            "library_models": [
                "Autumn",
                "Fireworks",
                "Galton Box",
                "Rugby"
            ]
        },
        "mod": {
            "identity": "mod",
            "display_name": "mod",
            "short_description": "Performs the modulo operation; reports the remainder from the division of the first number by the second number.",
            "search_terms": [
                "remainder",
                "divide",
                "math",
                "calculate",
                "arithmetic"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "mean",
                "count",
                "if",
                "any?"
            ],
            "library_models": [
                "Sunflower",
                "Flocking Vee Formations",
                "Voronoi",
                "Fruit Wars"
            ]
        },
        "move-to": {
            "identity": "move-to",
            "display_name": "move-to",
            "short_description": "Moves a turtle to set its x and y coordinates to be the same as another turtle or patch.",
            "search_terms": [
                "jump",
                "travel",
                "relocate",
                "shift",
                "transport",
                "hop"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "setxy",
                "set",
                "pxcor",
                "patches"
            ],
            "library_models": [
                "Heatbugs",
                "Shepherds",
                "Membrane Formation",
                "Grand Canyon"
            ]
        },
        "myself": {
            "identity": "myself",
            "display_name": "myself",
            "short_description": "Reports the original turtle that asked another turtle to follow some rules.",
            "search_terms": [
                "interaction",
                "caller",
                "original",
                "nested",
                "refer",
                "talk"
            ],
            "agents": [
                "turtles",
                "patches",
                "links"
            ],
            "see_also": [
                "nobody",
                "ask",
                "of",
                "let"
            ],
            "library_models": [
                "Sunflower Biomorphs",
                "Mammoths",
                "Autumn",
                "Fairy Circles"
            ]
        },
        "n-of": {
            "identity": "n-of",
            "display_name": "n-of",
            "short_description": "Reports \"n\" randomly picked agents from an agentset or items from a list.",
            "search_terms": [
                "subset",
                "random",
                "batch",
                "portion",
                "fragment"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "one-of",
                "count",
                "any?",
                "all?"
            ],
            "library_models": [
                "Virus",
                "Heatbugs",
                "Voronoi",
                "Virus on a Network"
            ]
        },
        "neighbors": {
            "identity": "neighbors",
            "display_name": "neighbors",
            "short_description": "Reports an agentset containing the eight neighboring patches.",
            "search_terms": [
                "surrounding",
                "nearby",
                "around",
                "directions",
                "next",
                "border",
                "adjoin",
                "touch"
            ],
            "agents": [
                "turtles",
                "patches"
            ],
            "see_also": [
                "neighbors4",
                "patch-ahead",
                "turtles-here",
                "patches"
            ],
            "library_models": [
                "Fur",
                "DLA",
                "Segregation",
                "Daisyworld"
            ]
        },
        "neighbors4": {
            "identity": "neighbors4",
            "display_name": "neighbors4",
            "short_description": "Reports an agentset containing the four neighboring patches in cardinal directions (north, west, south, east).",
            "search_terms": [
                "surrounding",
                "nearby",
                "around",
                "directions",
                "next",
                "border",
                "adjoin",
                "touch"
            ],
            "agents": [
                "turtles",
                "patches"
            ],
            "see_also": [
                "neighbors",
                "patch-ahead",
                "turtles-here",
                "patches"
            ],
            "library_models": [
                "Fire",
                "Life",
                "Sandpile",
                "Altruism"
            ]
        },
        "nobody": {
            "identity": "nobody",
            "display_name": "nobody",
            "short_description": "A special value that helps checking if an agent exists or not.",
            "search_terms": [
                "none",
                "empty",
                "dead",
                "exist",
                "nothing"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "any?",
                "member?",
                "n-of",
                "let"
            ],
            "library_models": [
                "Tumor",
                "Heatbugs",
                "Shepherds",
                "HIV"
            ]
        },
        "of": {
            "identity": "of",
            "display_name": "of",
            "short_description": "Reports the value of an agent-owned variable.",
            "search_terms": [
                "variable",
                "characteristic",
                "property",
                "feature"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "with",
                "to-report",
                "turtles-own",
                "patches-own"
            ],
            "library_models": [
                "Urban Suite - Recycling",
                "Paths",
                "Slime",
                "Language Change"
            ]
        },
        "one-of": {
            "identity": "one-of",
            "display_name": "one-of",
            "short_description": "Reports one randomly picked member from a provided agentset or list.",
            "search_terms": [
                "pick",
                "select",
                "draw",
                "lottery"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "n-of",
                "random",
                "max-n-of",
                "let"
            ],
            "library_models": [
                "Mammoths",
                "Ants",
                "Shepherds",
                "Fairy Circles"
            ]
        },
        "or": {
            "identity": "or",
            "display_name": "or",
            "short_description": "Checks if either of two provided conditions is true.",
            "search_terms": [
                "either",
                "boolean",
                "true",
                "false",
                "condition",
                "compare"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "if",
                "if-else",
                "and",
                "of"
            ],
            "library_models": [
                "Lennard-Jones",
                "GasLab Atmosphere",
                "Bidding Market",
                "Wealth Distribution"
            ]
        },
        "other": {
            "identity": "other",
            "display_name": "other",
            "short_description": "Reports an agentset which is the same as the input agentset but omits the agent that used this primitive.",
            "search_terms": [
                "omit",
                "exclude"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "any?",
                "turtles-here",
                "in-radius",
                "patches"
            ],
            "library_models": [
                "Virus",
                "Flocking",
                "Scatter",
                "Fruit Wars"
            ]
        },
        "patch": {
            "identity": "patch",
            "display_name": "patch",
            "short_description": "Reports a specific patch at the provided (x,y) conditions.",
            "search_terms": [
                "square",
                "background",
                "world"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "patches",
                "clear-patches",
                "patches-own",
                "neighbors"
            ],
            "library_models": [
                "Ant Lines",
                "Autumn",
                "SmoothLife",
                "Rumor Mill"
            ]
        },
        "patch-ahead": {
            "identity": "patch-ahead",
            "display_name": "patch-ahead",
            "short_description": "Reports the single patch that is the given distance \u201cahead\u201d of this turtle",
            "search_terms": [
                "before",
                "see",
                "detect",
                "lead",
                "onward"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "neighbors",
                "in-radius",
                "in-cone",
                "nobody"
            ],
            "library_models": [
                "Mammoths",
                "Slime",
                "Climate Change",
                "Traffic Intersection"
            ]
        },
        "patches": {
            "identity": "patches",
            "display_name": "patches",
            "short_description": "Reports an agentset that contains all the patches in a model.",
            "search_terms": [
                "square",
                "background",
                "world"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "clear-patches",
                "patches-own",
                "neighbors",
                "move-to"
            ],
            "library_models": [
                "Peppered Moths",
                "Blood Sugar Regulation",
                "Honeycomb"
            ]
        },
        "patches-own": {
            "identity": "patches-own",
            "display_name": "patches-own",
            "short_description": "Defines custom characteristics (variables) for patches. Each custom characteristic can have a different value for each patch.",
            "search_terms": [
                "patches",
                "variable",
                "declare"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "turtles-own",
                "set",
                "of",
                "with"
            ],
            "library_models": [
                "Diffusion Graphics",
                "Grand Canyon",
                "Life",
                "Hoteling's Law"
            ]
        },
        "pcolor": {
            "identity": "pcolor",
            "display_name": "pcolor",
            "short_description": "Reports a patch's color and changes a patch's color when used with the set primitive.",
            "search_terms": [
                "patch",
                "square",
                "world",
                "background",
                "paint"
            ],
            "agents": [
                "turtles",
                "patches"
            ],
            "see_also": [
                "color",
                "set",
                "patches",
                "neighbors"
            ],
            "library_models": [
                "Vision Evolution",
                "Rock Paper Scissors",
                "Wolf Sheep Predation"
            ]
        },
        "pen-down": {
            "identity": "pen-down",
            "display_name": "pen-down",
            "short_description": "Starts tracing the movement of the turtle on patches.",
            "search_terms": [
                "trace",
                "draw",
                "mark",
                "paint",
                "engrave",
                "sketch"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "pen-up",
                "clear-all",
                "forward",
                "right"
            ],
            "library_models": [
                "Turtles Circling",
                "Bidding Market",
                "GasLab Single Collision",
                "Pendulum"
            ]
        },
        "pen-up": {
            "identity": "pen-up",
            "display_name": "pen-up",
            "short_description": "Stops tracing a turtle's movement.",
            "search_terms": [
                "trace",
                "draw",
                "mark",
                "paint",
                "engrave",
                "sketch"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "pen-down",
                "clear-all",
                "forward",
                "right"
            ],
            "library_models": [
                "Turtles Circling",
                "Bidding Market",
                "GasLab Single Collision",
                "Pendulum"
            ]
        },
        "random": {
            "identity": "random",
            "display_name": "random",
            "short_description": "Reports a random whole number between 0 and a specified number.",
            "search_terms": [
                "probability",
                "chance",
                "lottery",
                "luck",
                "toss",
                "pick"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "random-float",
                "random-normal",
                "globals",
                "turtles-own"
            ],
            "library_models": [
                "Sunflower Biomorphs",
                "Mammoths",
                "Autumn",
                "Fairy Circles"
            ]
        },
        "random-float": {
            "identity": "random-float",
            "display_name": "random-float",
            "short_description": "Reports a random number with decimal points between 0 and a specified number.",
            "search_terms": [
                "decimal",
                "floating",
                "probability",
                "chance",
                "lottery",
                "luck",
                "toss",
                "pick"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "random",
                "random-normal",
                "globals",
                "turtles-own"
            ],
            "library_models": [
                "Fire",
                "Climate Change",
                "Galton Box",
                "Daisyworld"
            ]
        },
        "random-normal": {
            "identity": "random-normal",
            "display_name": "random-normal",
            "short_description": "Reports a random number with decimal points that is picked from over a normal distribution with a specified mean and standard deviation.",
            "search_terms": [
                "distribution",
                "bell",
                "curve",
                "chance",
                "probability",
                "lottery",
                "luck",
                "toss",
                "pick"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "random",
                "random-float",
                "mean",
                "set"
            ],
            "library_models": [
                "Anisogamy",
                "Autumn",
                "Epidem Basic",
                "Echo"
            ]
        },
        "repeat": {
            "identity": "repeat",
            "display_name": "repeat",
            "short_description": "Performs a provided set of rules (commands) repeatedly for a specified number of times.",
            "search_terms": [
                "repetition",
                "again",
                "multiple",
                "loop",
                "for",
                "execute"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "ask",
                "to",
                "end",
                "while"
            ],
            "library_models": [
                "Disease Solo",
                "Flocking Vee Formations",
                "Peppered Moths",
                "Ant Lines"
            ]
        },
        "reset-ticks": {
            "identity": "reset-ticks",
            "display_name": "reset-ticks",
            "short_description": "Sets the tick counter to 0.",
            "search_terms": [
                "counter",
                "time",
                "restart",
                "clock",
                "watch"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "tick",
                "to",
                "ask",
                "clear-all"
            ],
            "library_models": [
                "Wolf Sheep Predation",
                "Fire",
                "Autumn",
                "Climate Change"
            ]
        },
        "right": {
            "identity": "right",
            "display_name": "right",
            "short_description": "Changes a turtle's heading a certain amount of degrees to the right.",
            "search_terms": [
                "turn",
                "spin",
                "rotate",
                "angle",
                "direction",
                "orientation"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "left",
                "heading",
                "towards",
                "face"
            ],
            "library_models": [
                "Wolf Sheep Simple",
                "Mammoths",
                "Anisogamy",
                "DLA Simple"
            ]
        },
        "round": {
            "identity": "round",
            "display_name": "round",
            "short_description": "Reports the integer that is nearest to a specified value.",
            "search_terms": [
                "decimal",
                "floating",
                "near",
                "approximate",
                "roughly"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "count",
                "floor",
                "ceiling",
                "mean"
            ],
            "library_models": [
                "Sex Ratio Equilibrium",
                "Bug Hunt Camouflage",
                "GenDrift T Interact",
                "Blood Sugar Regulation"
            ]
        },
        "scale-color": {
            "identity": "scale-color",
            "display_name": "scale-color",
            "short_description": "Reports a shade of a base hue (color) based on where a speficied value falls is within a specified range (min-max).",
            "search_terms": [
                "shade",
                "legend",
                "tint",
                "paint",
                "tone",
                "saturation",
                "gradient"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "color",
                "pcolor",
                "set",
                "turtles-own"
            ],
            "library_models": [
                "Moths",
                "Ants",
                "Honeycomb",
                "Autumn"
            ]
        },
        "semicolon": {
            "identity": "semicolon",
            "display_name": "semicolon",
            "short_description": "Starts a comments to take notes on a line of code. Anything that follows a semicolon (;) will not be considered code.",
            "search_terms": [
                "comment",
                "note"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "to",
                "to-report",
                "end",
                "ask"
            ],
            "library_models": [
                "Moths",
                "Ants",
                "Honeycomb",
                "Autumn"
            ]
        },
        "set": {
            "identity": "set",
            "display_name": "set",
            "short_description": "Changes the value of a variable (global, local, or agent-owned).",
            "search_terms": [
                "variable",
                "value",
                "change",
                "modify",
                "alter"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "let",
                "globals",
                "turtles-own",
                "patches-own"
            ],
            "library_models": [
                "Wolf Sheep Predation",
                "Fire",
                "Autumn",
                "Climate Change"
            ]
        },
        "setxy": {
            "identity": "setxy",
            "display_name": "setxy",
            "short_description": "Moves a turtle to the exact location defined by the provided x and y coordinates.",
            "search_terms": [
                "position",
                "coordinate",
                "location",
                "move",
                "jump",
                "transport"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "move-to",
                "min-pxcor",
                "max-pycor",
                "neighbors"
            ],
            "library_models": [
                "Vision Evolution",
                "Tumor",
                "Virus",
                "Flocking"
            ]
        },
        "shape": {
            "identity": "shape",
            "display_name": "shape",
            "short_description": "Reports a turtles or link's shape and changes a turtle's or link's shape when used with the set primitive.",
            "search_terms": [
                "look",
                "design",
                "style",
                "outline",
                "image",
                "bitmap",
                "vector",
                "picture",
                "icon",
                "appearance",
                "figure",
                "photo"
            ],
            "agents": [
                "turtles",
                "links"
            ],
            "see_also": [
                "color",
                "turtles",
                "set",
                "of"
            ],
            "library_models": [
                "Urban Suite - Pollution",
                "Traffic Intersection",
                "Mimicry",
                "Ant Lines"
            ]
        },
        "sort-by": {
            "identity": "sort-by",
            "display_name": "sort-by",
            "short_description": "Reports a sorted version of a provided list based on a user-defined comparison.",
            "search_terms": [
                "list",
                "array",
                "order",
                "arrange",
                "sift",
                "cull",
                "assort"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "sort-on",
                "count",
                "mean",
                "ask"
            ],
            "library_models": [
                "Hoteling's Law",
                "GasLab Circular Particles",
                "CRISPR Bacterium",
                "Ask Ordering Example"
            ]
        },
        "sort-on": {
            "identity": "sort-on",
            "display_name": "sort-on",
            "short_description": "Reports a sorted version of a provided agentset based on a user-defined comparison.",
            "search_terms": [
                "list",
                "array",
                "order",
                "arrange",
                "sift",
                "cull",
                "assort"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "sort-by",
                "count",
                "mean",
                "ask"
            ],
            "library_models": [
                "Birthdays",
                "Dice",
                "DNA Protein Synthesis",
                "Rnd Example"
            ]
        },
        "sprout": {
            "identity": "sprout",
            "display_name": "sprout",
            "short_description": "Creates new turtles at the center of a patch.",
            "search_terms": [
                "create",
                "birth",
                "new",
                "turtle",
                "grow",
                "germinate",
                "spring",
                "vegetate",
                "root"
            ],
            "agents": [
                "patches"
            ],
            "see_also": [
                "hatch",
                "create-turtles",
                "die",
                "ask"
            ],
            "library_models": [
                "Daisyworld",
                "Ant Lines",
                "Heatbugs",
                "Fairy Circles"
            ]
        },
        "tick": {
            "identity": "tick",
            "display_name": "tick",
            "short_description": "Advances the tick counter by 1.",
            "search_terms": [
                "time",
                "counter",
                "clock",
                "watch"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "reset-ticks",
                "ask",
                "to",
                "clear-all"
            ],
            "library_models": [
                "Flocking",
                "BeeSmart Hive Finding",
                "Slime",
                "Shepherds"
            ]
        },
        "tie": {
            "identity": "tie",
            "display_name": "tie",
            "short_description": "Turns a link between two turtles into a rigid connection so that the movement of one turtle impacts the movement of the other.",
            "search_terms": [
                "link",
                "connection",
                "attachment",
                "lock",
                "hook",
                "anchor"
            ],
            "agents": [
                "links"
            ],
            "see_also": [
                "links",
                "create-links-with",
                "link-neighbors",
                "layout-circle"
            ],
            "library_models": [
                "Vision Evolution",
                "DNA Replication Fork",
                "Bug Hunt Environmental Changes",
                "Connected Chemistry 8 Gas Particle Sandbox"
            ]
        },
        "to": {
            "identity": "to",
            "display_name": "to",
            "short_description": "used to begin a command procedure",
            "search_terms": [
                "to",
                "begin",
                "command"
            ],
            "agents": [
                "observer",
                "utilities"
            ],
            "see_also": [
                "to-report",
                "end",
                "ask",
                "create-turtles"
            ],
            "library_models": [
                "Wolf Sheep Predation",
                "Fire",
                "Ants",
                "Segregation"
            ]
        },
        "to-report": {
            "identity": "to-report",
            "display_name": "to-report",
            "short_description": "Begin a procedure to create a custom reporter.",
            "search_terms": [
                "procedure",
                "function",
                "return",
                "calculate",
                "transform",
                "input",
                "output"
            ],
            "agents": [
                "utilities"
            ],
            "see_also": [
                "to",
                "end",
                "ask",
                "if"
            ],
            "library_models": [
                "Mimicry",
                "Moths",
                "Rock Paper Scissors",
                "HIV"
            ]
        },
        "towards": {
            "identity": "towards",
            "display_name": "towards",
            "short_description": "Reports the angle of the caller towards an agent.",
            "search_terms": [
                "turn",
                "angle",
                "face",
                "direction",
                "twist",
                "spin"
            ],
            "agents": [
                "turtles"
            ],
            "see_also": [
                "face",
                "right",
                "left",
                "heading"
            ],
            "library_models": [
                "Chaos in a Box",
                "Bug Hunt Coevolution",
                "GenEvo 1 Genetic Switch",
                "Traffic 2 Lanes"
            ]
        },
        "turtle": {
            "identity": "turtle",
            "display_name": "turtle",
            "short_description": "Reports a specific turtle that has the provided who number.",
            "search_terms": [
                "shape",
                "triangle",
                "mobile",
                "agent",
                "tortoise",
                "animal",
                "person",
                "people",
                "object",
                "thing"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "ask",
                "turtles-own",
                "patches",
                "links"
            ],
            "library_models": [
                "Wolf Sheep Predation",
                "Virus",
                "Tumor",
                "Bug Hunt Camouflage"
            ]
        },
        "turtles": {
            "identity": "turtles",
            "display_name": "turtles",
            "short_description": "Reports an agentset that contains all the turtles in a model.",
            "search_terms": [
                "shape",
                "triangle",
                "mobile",
                "agent",
                "tortoise",
                "animal",
                "person",
                "people",
                "object",
                "thing"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "ask",
                "turtles-own",
                "patches",
                "links"
            ],
            "library_models": [
                "Disease Solo",
                "Flocking Vee Formations",
                "Peppered Moths",
                "Ant Lines"
            ]
        },
        "turtles-here": {
            "identity": "turtles-here",
            "display_name": "turtles-here",
            "short_description": "Reports the agentset of all the turtles on a caller's patch.",
            "search_terms": [
                "touch",
                "contact",
                "near",
                "communicate",
                "rub",
                "tangent",
                "tap",
                "collide",
                "notice",
                "recognize",
                "sense"
            ],
            "agents": [
                "turtles",
                "patches"
            ],
            "see_also": [
                "neighbors",
                "patches",
                "other",
                "in-radius"
            ],
            "library_models": [
                "El Farol",
                "Party",
                "Segregation",
                "Chemical Equilibrium"
            ]
        },
        "turtles-own": {
            "identity": "turtles-own",
            "display_name": "turtles-own",
            "short_description": "Declare a variable that belongs to turtles.",
            "search_terms": [
                "variable",
                "declare",
                "characteristic",
                "property",
                "attribute",
                "trait",
                "quality",
                "phenotype"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "set",
                "globals",
                "patches-own",
                "with",
                "of"
            ],
            "library_models": [
                "Disease Solo",
                "Flocking Vee Formations",
                "Tumor",
                "Wolf Sheep Predation"
            ]
        },
        "while": {
            "identity": "while",
            "display_name": "while",
            "short_description": "Begins a loop that runs as long as the reporter returns true. ",
            "search_terms": [
                "loop"
            ],
            "agents": [
                "observer"
            ],
            "see_also": [
                "if",
                "if-else",
                "repeat",
                "tick"
            ],
            "library_models": [
                "Moths",
                "Traffic Basic",
                "Shepherds"
            ]
        },
        "with": {
            "identity": "with",
            "display_name": "with",
            "short_description": "Reports a subset of the original agentset that only contains the agents with specified characteristics.",
            "search_terms": [
                "specific",
                "agentset",
                "query",
                "narrow",
                "subset",
                "reduce",
                "fragment",
                "select"
            ],
            "agents": [
                "observer",
                "turtles",
                "patches",
                "links"
            ],
            "see_also": [
                "if",
                "of",
                "turtles-own",
                "patches-own"
            ],
            "library_models": [
                "Fur",
                "Mimicry",
                "Ants",
                "Heatbugs"
            ]
        }
    }
}